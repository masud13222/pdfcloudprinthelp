from pyrogram import Client, filters
from pyrogram.types import Message
from motor.motor_asyncio import AsyncIOMotorClient
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# MongoDB setup
mongo_client = AsyncIOMotorClient(os.getenv('MONGODB_URI'))
db = mongo_client[os.getenv('DB_NAME')]
users_collection = db['users']

# Get admin IDs from env
ADMIN_IDS = [int(id) for id in os.getenv('ADMIN_IDS', '').split(',') if id]

async def is_admin(user_id: int) -> bool:
    """Check if user is admin."""
    return user_id in ADMIN_IDS

async def users_command(client: Client, message: Message):
    """Handle /users command to show user statistics."""
    try:
        # Check if user is admin
        if not await is_admin(message.from_user.id):
            await message.reply_text(
                "тЭМ **ржЕржиржирзБржорзЛржжрж┐ржд ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕!**\n\n"
                "рж╢рзБржзрзБржорж╛рждрзНрж░ ржЕрзНржпрж╛ржбржорж┐ржи ржПржЗ ржХржорж╛ржирзНржб ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред"
            )
            return
            
        # Get user stats from MongoDB
        total_users = await users_collection.count_documents({})
        today_users = await users_collection.count_documents({
            "joined_date": {
                "$gte": {"$date": {"$now": {"$subtract": ["$$NOW", 24*60*60*1000]}}}
            }
        })
        
        # Get active users (used bot in last 24h)
        active_users = await users_collection.count_documents({
            "last_used": {
                "$gte": {"$date": {"$now": {"$subtract": ["$$NOW", 24*60*60*1000]}}}
            }
        })
        
        await message.reply_text(
            "ЁЯУК **ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи**\n\n"
            f"ЁЯСе **ржорзЛржЯ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА:** {total_users:,}ржЬржи\n"
            f"ЁЯУЕ **ржЖржЬржХрзЗрж░ ржирждрзБржи:** {today_users:,}ржЬржи\n"
            f"тЬи **рзирзк ржШржирзНржЯрж╛ржпрж╝ рж╕ржХрзНрж░рж┐ржпрж╝:** {active_users:,}ржЬржи\n\n"
            "**ЁЯУЭ ржирзЛржЯ:** рж╢рзБржзрзБржорж╛рждрзНрж░ ржЕрзНржпрж╛ржбржорж┐ржирж░рж╛ ржПржЗ рждржерзНржп ржжрзЗржЦрждрзЗ ржкрж╛рж░ржмрзЗржиред"
        )
            
    except Exception as e:
        await message.reply_text(
            "тЭМ **ржПрж░рж░!**\n\n"
            f"ржХрж╛рж░ржг: {str(e)}\n"
            "ржжржпрж╝рж╛ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред"
        ) 