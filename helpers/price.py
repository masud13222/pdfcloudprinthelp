from pyrogram import Client, filters
from pyrogram.types import Message
import math

def calculate_sheets(total_pages: int, layout: str) -> float:
    """Calculate number of sheets needed."""
    slides_per_sheet = {
        'L4': 8,   # 4 slides per side * 2 sides
        'L6': 12,  # 6 slides per side * 2 sides
        'L8': 16,  # 8 slides per side * 2 sides
        'P1': 2,   # 1 slide per side * 2 sides
        'P3': 6,   # 3 slides per side * 2 sides
        'P4': 8    # 4 slides per side * 2 sides
    }
    
    if layout not in slides_per_sheet:
        return 0
        
    return math.ceil(total_pages / slides_per_sheet[layout])

def calculate_price(sheets: int, price_per_sheet: float = 1.8) -> float:
    """Calculate total price."""
    return sheets * price_per_sheet

async def show_layout_guide(message: Message):
    """Show layout guide and calculation method."""
    await message.reply_text(
        "ЁЯУЦ **ржкрзНрж░рж┐ржирзНржЯрж┐ржВ рж▓рзЗржЖржЙржЯ ржЧрж╛ржЗржб**\n\n"
        "**тД╣я╕П ржмрж┐рж╢рзЗрж╖ ржжрзНрж░рж╖рзНржЯржмрзНржп:**\n"
        "тАв ржкрзНрж░рждрж┐ржЯрж┐ рж╢рзАржЯрзЗрж░ ржжрзБржЗ ржкрзГрж╖рзНржарж╛ржпрж╝ ржкрзНрж░рж┐ржирзНржЯ рж╣ржпрж╝\n"
        "тАв ржпрзЗржоржи: L4 = ржкрзНрж░рждрж┐ ржкрзГрж╖рзНржарж╛ржпрж╝ 4ржЯрж┐ = ржкрзНрж░рждрж┐ рж╢рзАржЯрзЗ 8ржЯрж┐\n\n"
        "**ЁЯФД рж▓рзНржпрж╛ржирзНржбрж╕рзНржХрзЗржк ржорзЛржб:**\n"
        "тАв L4 = ржкрзНрж░рждрж┐ ржкрзГрж╖рзНржарж╛ржпрж╝ 4ржЯрж┐ рж╕рзНрж▓рж╛ржЗржб (ржорзЛржЯ 8ржЯрж┐)\n"
        "тАв L6 = ржкрзНрж░рждрж┐ ржкрзГрж╖рзНржарж╛ржпрж╝ 6ржЯрж┐ рж╕рзНрж▓рж╛ржЗржб (ржорзЛржЯ 12ржЯрж┐)\n"
        "тАв L8 = ржкрзНрж░рждрж┐ ржкрзГрж╖рзНржарж╛ржпрж╝ 8ржЯрж┐ рж╕рзНрж▓рж╛ржЗржб (ржорзЛржЯ 16ржЯрж┐)\n\n"
        "**ЁЯУД ржкрзЛрж░рзНржЯрзНрж░рзЗржЯ ржорзЛржб:**\n"
        "тАв P1 = ржкрзНрж░рждрж┐ ржкрзГрж╖рзНржарж╛ржпрж╝ 1ржЯрж┐ рж╕рзНрж▓рж╛ржЗржб (ржорзЛржЯ 2ржЯрж┐)\n"
        "тАв P3 = ржкрзНрж░рждрж┐ ржкрзГрж╖рзНржарж╛ржпрж╝ 3ржЯрж┐ рж╕рзНрж▓рж╛ржЗржб (ржорзЛржЯ 6ржЯрж┐)\n"
        "тАв P4 = ржкрзНрж░рждрж┐ ржкрзГрж╖рзНржарж╛ржпрж╝ 4ржЯрж┐ рж╕рзНрж▓рж╛ржЗржб (ржорзЛржЯ 8ржЯрж┐)\n\n"
        "**ЁЯТ░ рж╣рж┐рж╕рж╛ржм ржкржжрзНржзрждрж┐:**\n"
        "тАв ржкрзНрж░рждрж┐ рж╢рзАржЯрзЗрж░ ржжрж╛ржо = рзз.рзорзж ржЯрж╛ржХрж╛\n"
        "тАв рж╢рзАржЯ рж╕ржВржЦрзНржпрж╛ = тМИржорзЛржЯ ржкрзЗржЬ ├╖ ржкрзНрж░рждрж┐ рж╢рзАржЯрзЗ рж╕рзНрж▓рж╛ржЗржб рж╕ржВржЦрзНржпрж╛тМЙ\n"
        "тАв ржорзЛржЯ ржжрж╛ржо = рж╢рзАржЯ рж╕ржВржЦрзНржпрж╛ ├Ч рзз.рзорзж\n"
        "тАв ржХрзБрж░рж┐ржпрж╝рж╛рж░ ржЪрж╛рж░рзНржЬ ржЖрж▓рж╛ржжрж╛ (WhatsApp ржП ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи)\n\n"
        "**ЁЯУ▒ ржпрзЛржЧрж╛ржпрзЛржЧ:**\n"
        "тАв [WhatsApp ржХрж░рзБржи](https://api.whatsapp.com/send?phone=8801880215950&text=PDF%20ржкрзНрж░рж┐ржирзНржЯрж┐ржВ%20рж╕ржорзНржкрж░рзНржХрзЗ%20ржЬрж╛ржирждрзЗ%20ржЪрж╛ржЗ)\n\n"
        "**ЁЯУЭ ржХржорж╛ржирзНржб ржмрзНржпржмрж╣рж╛рж░:**\n"
        "тАв ржПржХржЯрж┐ PDF: /price 23 -L4\n"
        "тАв ржПржХрж╛ржзрж┐ржХ PDF: /price 23,45,67 -L4\n"
        "тАв рж╢рзБржзрзБ ржЧрж╛ржЗржб ржжрзЗржЦрждрзЗ: /price",
        disable_web_page_preview=True
    )

async def price_command(client: Client, message: Message):
    """Handle /price command."""
    try:
        # Get command text
        cmd = message.text.strip()
        
        # If no arguments, show guide
        if cmd == "/price":
            await show_layout_guide(message)
            return
            
        # Parse command
        parts = cmd.split()
        if len(parts) != 3 or not parts[2].startswith('-'):
            await message.reply_text(
                "тЭМ **ржнрзБрж▓ ржХржорж╛ржирзНржб!**\n\n"
                "рж╕ржарж┐ржХ ржлрж░ржорзНржпрж╛ржЯ:\n"
                "тАв ржПржХржЯрж┐ PDF: /price 23 -L4\n"
                "тАв ржПржХрж╛ржзрж┐ржХ PDF: /price 23,45,67 -L4\n"
                "тАв ржЧрж╛ржЗржб ржжрзЗржЦрждрзЗ: /price"
            )
            return
            
        # Get pages and layout
        pages_str = parts[1]
        layout = parts[2][1:].upper()  # Remove - and convert to uppercase
        
        # Validate layout
        valid_layouts = ['L4', 'L6', 'L8', 'P1', 'P3', 'P4']
        if layout not in valid_layouts:
            await message.reply_text(
                "тЭМ **ржЕржмрзИржз рж▓рзЗржЖржЙржЯ!**\n\n"
                "рж╕ржарж┐ржХ рж▓рзЗржЖржЙржЯ:\n"
                "тАв рж▓рзНржпрж╛ржирзНржбрж╕рзНржХрзЗржк: L4, L6, L8\n"
                "тАв ржкрзЛрж░рзНржЯрзНрж░рзЗржЯ: P1, P3, P4\n\n"
                "ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЬрж╛ржирждрзЗ /price ржХржорж╛ржирзНржб ржжрж┐ржиред"
            )
            return
            
        # Parse page numbers
        try:
            pages = [int(p) for p in pages_str.split(',')]
        except:
            await message.reply_text(
                "тЭМ **ржЕржмрзИржз ржкрзЗржЬ рж╕ржВржЦрзНржпрж╛!**\n\n"
                "рж╕ржарж┐ржХ ржлрж░ржорзНржпрж╛ржЯ:\n"
                "тАв ржПржХржЯрж┐ PDF: 23\n"
                "тАв ржПржХрж╛ржзрж┐ржХ PDF: 23,45,67"
            )
            return
            
        # Calculate total pages
        total_pages = sum(pages)
        
        # Calculate sheets and price for each PDF
        individual_calcs = []
        total_sheets = 0
        total_price = 0
        
        for i, page in enumerate(pages, 1):
            sheets = calculate_sheets(page, layout)
            price = calculate_price(sheets)
            total_sheets += sheets
            total_price += price
            individual_calcs.append(
                f"{i}. ржкрзЗржЬ рж╕ржВржЦрзНржпрж╛ - {page}ржЯрж┐\n"
                f"   тАв рж╢рзАржЯ - {sheets}ржЯрж┐\n"
                f"   тАв ржжрж╛ржо - {price:.1f} ржЯрж╛ржХрж╛\n"
            )
        
        # Calculate combined total
        combined_sheets = calculate_sheets(total_pages, layout)
        combined_price = calculate_price(combined_sheets)
        
        # Show calculation
        await message.reply_text(
            "ЁЯУК **ржкрзНрж░рж┐ржирзНржЯрж┐ржВ рж╣рж┐рж╕рж╛ржм**\n\n"
            f"**ЁЯУС ржЖрж▓рж╛ржжрж╛ рж╣рж┐рж╕рж╛ржм:**\n{''.join(individual_calcs)}\n"
            f"**ЁЯУК ржорзЛржЯ (ржЖрж▓рж╛ржжрж╛):**\n"
            f"тАв ржорзЛржЯ рж╢рзАржЯ: {total_sheets}ржЯрж┐\n"
            f"тАв ржорзЛржЯ ржжрж╛ржо: {total_price:.1f} ржЯрж╛ржХрж╛\n\n"
            f"**ЁЯУК ржорзЛржЯ (ржПржХрж╕рж╛ржерзЗ):**\n"
            f"тАв ржорзЛржЯ ржкрзЗржЬ: {total_pages}ржЯрж┐\n"
            f"тАв ржорзЛржЯ рж╢рзАржЯ: {combined_sheets}ржЯрж┐\n"
            f"тАв ржорзЛржЯ ржжрж╛ржо: {combined_price:.1f} ржЯрж╛ржХрж╛\n\n"
            f"**ЁЯЦия╕П ржкрзНрж░рж┐ржирзНржЯрж┐ржВ рждржерзНржп:**\n"
            f"тАв рж▓рзЗржЖржЙржЯ: {layout}\n"
            f"тАв ржкрзНрж░рждрж┐ рж╢рзАржЯрзЗ рж╕рзНрж▓рж╛ржЗржб: {8 if layout == 'L4' else 12 if layout == 'L6' else 16 if layout == 'L8' else 2 if layout == 'P1' else 6 if layout == 'P3' else 8}ржЯрж┐\n\n"
            "**ЁЯУ▒ ржпрзЛржЧрж╛ржпрзЛржЧ:**\n"
            "тАв [WhatsApp ржХрж░рзБржи](https://api.whatsapp.com/send?phone=8801880215950&text=PDF%20ржкрзНрж░рж┐ржирзНржЯрж┐ржВ%20рж╕ржорзНржкрж░рзНржХрзЗ%20ржЬрж╛ржирждрзЗ%20ржЪрж╛ржЗ)\n\n"
            "**тД╣я╕П ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЬрж╛ржирждрзЗ** /price **ржХржорж╛ржирзНржб ржжрж┐ржиред**",
            disable_web_page_preview=True
        )
            
    except Exception as e:
        await message.reply_text(
            "тЭМ **ржжрзБржГржЦрж┐ржд! рж╣рж┐рж╕рж╛ржм ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред**\n\n"
            f"ржХрж╛рж░ржг: {str(e)}\n"
            "ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред"
        )
